# Generated by Django 4.2.7 on 2025-09-19 23:11

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('visitors', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='JobAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('analysis_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('job_title', models.CharField(max_length=200)),
                ('company_name', models.CharField(blank=True, max_length=200)),
                ('job_requirements', models.TextField()),
                ('uploaded_file', models.FileField(blank=True, null=True, upload_to='job_docs/')),
                ('file_processed', models.BooleanField(default=False)),
                ('overall_match_score', models.FloatField(help_text='Overall match percentage')),
                ('skills_match_score', models.FloatField(help_text='Skills match percentage')),
                ('experience_match_score', models.FloatField(help_text='Experience match percentage')),
                ('education_match_score', models.FloatField(help_text='Education match percentage')),
                ('matched_skills', models.JSONField(default=list, help_text='Skills that match job requirements')),
                ('missing_skills', models.JSONField(default=list, help_text='Required skills not found in profile')),
                ('skill_gaps', models.JSONField(default=list, help_text='Skills that need improvement')),
                ('experience_analysis', models.JSONField(default=dict, help_text='Experience comparison analysis')),
                ('education_analysis', models.JSONField(default=dict, help_text='Education comparison analysis')),
                ('recommendations_data', models.JSONField(default=list, help_text='Actionable recommendations')),
                ('processing_time', models.FloatField(help_text='Analysis processing time in seconds')),
                ('tokens_used', models.PositiveIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('visitor_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_analyses', to='visitors.visitorsession')),
            ],
            options={
                'verbose_name': 'Job Analysis',
                'verbose_name_plural': 'Job Analyses',
                'db_table': 'job_matching_analysis',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SkillsMatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('match_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('job_skill', models.CharField(max_length=100)),
                ('profile_skill', models.CharField(max_length=100)),
                ('match_type', models.CharField(choices=[('exact', 'Exact Match'), ('similar', 'Similar Match'), ('related', 'Related Match')], max_length=20)),
                ('confidence_score', models.FloatField(help_text='Match confidence (0-1)')),
                ('is_required', models.BooleanField(default=False)),
                ('years_experience', models.PositiveIntegerField(blank=True, null=True)),
                ('proficiency_level', models.CharField(blank=True, max_length=20)),
                ('job_analysis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skills_matches', to='job_matching.jobanalysis')),
            ],
            options={
                'verbose_name': 'Skills Match',
                'verbose_name_plural': 'Skills Matches',
                'db_table': 'job_matching_skillsmatch',
            },
        ),
        migrations.CreateModel(
            name='JobRecommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recommendation_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('recommendation_type', models.CharField(choices=[('skill', 'Skill Development'), ('experience', 'Experience Building'), ('education', 'Education'), ('project', 'Project Work'), ('certification', 'Certification')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('priority', models.CharField(choices=[('high', 'High Priority'), ('medium', 'Medium Priority'), ('low', 'Low Priority')], default='medium', max_length=10)),
                ('estimated_time', models.CharField(blank=True, help_text='Estimated time to complete', max_length=50)),
                ('resources', models.JSONField(default=list, help_text='Helpful resources or links')),
                ('skills_involved', models.JSONField(default=list, help_text='Skills this recommendation addresses')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('job_analysis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommendations', to='job_matching.jobanalysis')),
            ],
            options={
                'verbose_name': 'Job Recommendation',
                'verbose_name_plural': 'Job Recommendations',
                'db_table': 'job_matching_recommendation',
                'ordering': ['priority', 'created_at'],
            },
        ),
    ]
